{"code":"/**\r\n * @license\r\n * Copyright Google Inc. All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar ts = require(\"typescript\");\r\n/**\r\n * Returns the declarations for the given decorator.\r\n */\r\nfunction getDecoratorDeclarations(decorator, typeChecker) {\r\n    // Walk down the expression to find the identifier of the decorator function.\r\n    var node = decorator;\r\n    while (node.kind !== ts.SyntaxKind.Identifier) {\r\n        if (node.kind === ts.SyntaxKind.Decorator || node.kind === ts.SyntaxKind.CallExpression) {\r\n            node = node.expression;\r\n        }\r\n        else {\r\n            // We do not know how to handle this type of decorator.\r\n            return [];\r\n        }\r\n    }\r\n    var decSym = typeChecker.getSymbolAtLocation(node);\r\n    if (!decSym)\r\n        return [];\r\n    if (decSym.flags & ts.SymbolFlags.Alias) {\r\n        decSym = typeChecker.getAliasedSymbol(decSym);\r\n    }\r\n    return decSym.getDeclarations() || [];\r\n}\r\nexports.getDecoratorDeclarations = getDecoratorDeclarations;\r\n/**\r\n * Returns true if node has an exporting decorator  (i.e., a decorator with @ExportDecoratedItems\r\n * in its JSDoc).\r\n */\r\nfunction hasExportingDecorator(node, typeChecker) {\r\n    return node.decorators &&\r\n        node.decorators.some(function (decorator) { return isExportingDecorator(decorator, typeChecker); });\r\n}\r\nexports.hasExportingDecorator = hasExportingDecorator;\r\n/**\r\n * Returns true if the given decorator has an @ExportDecoratedItems directive in its JSDoc.\r\n */\r\nfunction isExportingDecorator(decorator, typeChecker) {\r\n    return getDecoratorDeclarations(decorator, typeChecker).some(function (declaration) {\r\n        var range = ts.getLeadingCommentRanges(declaration.getFullText(), 0);\r\n        if (!range) {\r\n            return false;\r\n        }\r\n        for (var _i = 0, range_1 = range; _i < range_1.length; _i++) {\r\n            var _a = range_1[_i], pos = _a.pos, end = _a.end;\r\n            if (/@ExportDecoratedItems\\b/.test(declaration.getFullText().substring(pos, end))) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    });\r\n}\r\n//# sourceMappingURL=decorators.js.map","sourceMap":{"version":3,"file":"decorators.js","sourceRoot":"","sources":["node_modules/tsickle/src/decorators.ts"],"names":[],"mappings":"AAAA;;;;;;GAMG;;AAEH,+BAAiC;AAEjC;;GAEG;AACH,kCAAyC,SAAuB,EAAE,WAA2B;IAC3F,6EAA6E;IAC7E,IAAI,IAAI,GAAY,SAAS,CAAC;IAC9B,OAAO,IAAI,CAAC,IAAI,KAAK,EAAE,CAAC,UAAU,CAAC,UAAU,EAAE,CAAC;QAC9C,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,KAAK,EAAE,CAAC,UAAU,CAAC,SAAS,IAAI,IAAI,CAAC,IAAI,KAAK,EAAE,CAAC,UAAU,CAAC,cAAc,CAAC,CAAC,CAAC;YACxF,IAAI,GAAI,IAAyC,CAAC,UAAU,CAAC;QAC/D,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,uDAAuD;YACvD,MAAM,CAAC,EAAE,CAAC;QACZ,CAAC;IACH,CAAC;IAED,IAAI,MAAM,GAAG,WAAW,CAAC,mBAAmB,CAAC,IAAI,CAAC,CAAC;IACnD,EAAE,CAAC,CAAC,CAAC,MAAM,CAAC;QAAC,MAAM,CAAC,EAAE,CAAC;IACvB,EAAE,CAAC,CAAC,MAAM,CAAC,KAAK,GAAG,EAAE,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC,CAAC;QACxC,MAAM,GAAG,WAAW,CAAC,gBAAgB,CAAC,MAAM,CAAC,CAAC;IAChD,CAAC;IACD,MAAM,CAAC,MAAM,CAAC,eAAe,EAAE,IAAI,EAAE,CAAC;AACxC,CAAC;AAlBD,4DAkBC;AAED;;;GAGG;AACH,+BAAsC,IAAa,EAAE,WAA2B;IAC9E,MAAM,CAAC,IAAI,CAAC,UAAU;QAClB,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,UAAA,SAAS,IAAI,OAAA,oBAAoB,CAAC,SAAS,EAAE,WAAW,CAAC,EAA5C,CAA4C,CAAC,CAAC;AACtF,CAAC;AAHD,sDAGC;AAED;;GAEG;AACH,8BAA8B,SAAuB,EAAE,WAA2B;IAChF,MAAM,CAAC,wBAAwB,CAAC,SAAS,EAAE,WAAW,CAAC,CAAC,IAAI,CAAC,UAAA,WAAW;QACtE,IAAM,KAAK,GAAG,EAAE,CAAC,uBAAuB,CAAC,WAAW,CAAC,WAAW,EAAE,EAAE,CAAC,CAAC,CAAC;QACvE,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;YACX,MAAM,CAAC,KAAK,CAAC;QACf,CAAC;QACD,GAAG,CAAC,CAAqB,UAAK,EAAL,eAAK,EAAL,mBAAK,EAAL,IAAK;YAAnB,IAAA,gBAAU,EAAT,YAAG,EAAE,YAAG;YAClB,EAAE,CAAC,CAAC,yBAAyB,CAAC,IAAI,CAAC,WAAW,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;gBAClF,MAAM,CAAC,IAAI,CAAC;YACd,CAAC;SACF;QACD,MAAM,CAAC,KAAK,CAAC;IACf,CAAC,CAAC,CAAC;AACL,CAAC","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport * as ts from 'typescript';\n\n/**\n * Returns the declarations for the given decorator.\n */\nexport function getDecoratorDeclarations(decorator: ts.Decorator, typeChecker: ts.TypeChecker) {\n  // Walk down the expression to find the identifier of the decorator function.\n  let node: ts.Node = decorator;\n  while (node.kind !== ts.SyntaxKind.Identifier) {\n    if (node.kind === ts.SyntaxKind.Decorator || node.kind === ts.SyntaxKind.CallExpression) {\n      node = (node as ts.Decorator | ts.CallExpression).expression;\n    } else {\n      // We do not know how to handle this type of decorator.\n      return [];\n    }\n  }\n\n  let decSym = typeChecker.getSymbolAtLocation(node);\n  if (!decSym) return [];\n  if (decSym.flags & ts.SymbolFlags.Alias) {\n    decSym = typeChecker.getAliasedSymbol(decSym);\n  }\n  return decSym.getDeclarations() || [];\n}\n\n/**\n * Returns true if node has an exporting decorator  (i.e., a decorator with @ExportDecoratedItems\n * in its JSDoc).\n */\nexport function hasExportingDecorator(node: ts.Node, typeChecker: ts.TypeChecker) {\n  return node.decorators &&\n      node.decorators.some(decorator => isExportingDecorator(decorator, typeChecker));\n}\n\n/**\n * Returns true if the given decorator has an @ExportDecoratedItems directive in its JSDoc.\n */\nfunction isExportingDecorator(decorator: ts.Decorator, typeChecker: ts.TypeChecker) {\n  return getDecoratorDeclarations(decorator, typeChecker).some(declaration => {\n    const range = ts.getLeadingCommentRanges(declaration.getFullText(), 0);\n    if (!range) {\n      return false;\n    }\n    for (const {pos, end} of range) {\n      if (/@ExportDecoratedItems\\b/.test(declaration.getFullText().substring(pos, end))) {\n        return true;\n      }\n    }\n    return false;\n  });\n}\n"]},"version":"1","isExternal":true,"dependencies":{"modules":[],"mappings":[{"modulePath":"tslib","resolvedPath":null,"external":false,"resolved":false},{"modulePath":"typescript","resolvedPath":null,"external":false,"resolved":false}],"refFiles":[],"refTypings":[]},"diagnostics":{"syntacticErrors":[],"semanticErrors":[{"code":2307,"fileName":"node_modules/tsickle/src/decorators.ts","message":"Cannot find module 'typescript'.","line":9,"column":21},{"code":2354,"fileName":"node_modules/tsickle/src/decorators.ts","message":"This syntax requires an imported helper but module 'tslib' cannot be found.","line":52,"column":17}]},"hash":"5e23179f019a0981489c286165b47388ca2bd05a"}