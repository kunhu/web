{"code":"// 4.1.8 Reflect.getMetadataKeys ( target [, propertyKey] )\r\n// https://rbuckton.github.io/reflect-metadata/#reflect.getmetadatakeys\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nrequire(\"../Reflect\");\r\nvar chai_1 = require(\"chai\");\r\ndescribe(\"Reflect.getMetadataKeys\", function () {\r\n    it(\"KeysInvalidTarget\", function () {\r\n        // 1. If Type(target) is not Object, throw a TypeError exception.\r\n        chai_1.assert.throws(function () { return Reflect.getMetadataKeys(undefined, undefined); }, TypeError);\r\n    });\r\n    it(\"KeysWithoutTargetKeyWhenNotDefined\", function () {\r\n        var obj = {};\r\n        var result = Reflect.getMetadataKeys(obj, undefined);\r\n        chai_1.assert.deepEqual(result, []);\r\n    });\r\n    it(\"KeysWithoutTargetKeyWhenDefined\", function () {\r\n        var obj = {};\r\n        Reflect.defineMetadata(\"key\", \"value\", obj, undefined);\r\n        var result = Reflect.getMetadataKeys(obj, undefined);\r\n        chai_1.assert.deepEqual(result, [\"key\"]);\r\n    });\r\n    it(\"KeysWithoutTargetKeyWhenDefinedOnPrototype\", function () {\r\n        var prototype = {};\r\n        var obj = Object.create(prototype);\r\n        Reflect.defineMetadata(\"key\", \"value\", prototype, undefined);\r\n        var result = Reflect.getMetadataKeys(obj, undefined);\r\n        chai_1.assert.deepEqual(result, [\"key\"]);\r\n    });\r\n    it(\"KeysOrderWithoutTargetKey\", function () {\r\n        var obj = {};\r\n        Reflect.defineMetadata(\"key1\", \"value\", obj, undefined);\r\n        Reflect.defineMetadata(\"key0\", \"value\", obj, undefined);\r\n        var result = Reflect.getMetadataKeys(obj, undefined);\r\n        chai_1.assert.deepEqual(result, [\"key1\", \"key0\"]);\r\n    });\r\n    it(\"KeysOrderAfterRedefineWithoutTargetKey\", function () {\r\n        var obj = {};\r\n        Reflect.defineMetadata(\"key1\", \"value\", obj, undefined);\r\n        Reflect.defineMetadata(\"key0\", \"value\", obj, undefined);\r\n        Reflect.defineMetadata(\"key1\", \"value\", obj, undefined);\r\n        var result = Reflect.getMetadataKeys(obj, undefined);\r\n        chai_1.assert.deepEqual(result, [\"key1\", \"key0\"]);\r\n    });\r\n    it(\"KeysOrderWithoutTargetKeyWhenDefinedOnPrototype\", function () {\r\n        var prototype = {};\r\n        Reflect.defineMetadata(\"key2\", \"value\", prototype, undefined);\r\n        var obj = Object.create(prototype);\r\n        Reflect.defineMetadata(\"key1\", \"value\", obj, undefined);\r\n        Reflect.defineMetadata(\"key0\", \"value\", obj, undefined);\r\n        var result = Reflect.getMetadataKeys(obj, undefined);\r\n        chai_1.assert.deepEqual(result, [\"key1\", \"key0\", \"key2\"]);\r\n    });\r\n    it(\"KeysWithTargetKeyWhenNotDefined\", function () {\r\n        var obj = {};\r\n        var result = Reflect.getMetadataKeys(obj, \"name\");\r\n        chai_1.assert.deepEqual(result, []);\r\n    });\r\n    it(\"KeysWithTargetKeyWhenDefined\", function () {\r\n        var obj = {};\r\n        Reflect.defineMetadata(\"key\", \"value\", obj, \"name\");\r\n        var result = Reflect.getMetadataKeys(obj, \"name\");\r\n        chai_1.assert.deepEqual(result, [\"key\"]);\r\n    });\r\n    it(\"KeysWithTargetKeyWhenDefinedOnPrototype\", function () {\r\n        var prototype = {};\r\n        var obj = Object.create(prototype);\r\n        Reflect.defineMetadata(\"key\", \"value\", prototype, \"name\");\r\n        var result = Reflect.getMetadataKeys(obj, \"name\");\r\n        chai_1.assert.deepEqual(result, [\"key\"]);\r\n    });\r\n    it(\"KeysOrderAfterRedefineWithTargetKey\", function () {\r\n        var obj = {};\r\n        Reflect.defineMetadata(\"key1\", \"value\", obj, \"name\");\r\n        Reflect.defineMetadata(\"key0\", \"value\", obj, \"name\");\r\n        Reflect.defineMetadata(\"key1\", \"value\", obj, \"name\");\r\n        var result = Reflect.getMetadataKeys(obj, \"name\");\r\n        chai_1.assert.deepEqual(result, [\"key1\", \"key0\"]);\r\n    });\r\n    it(\"KeysOrderWithTargetKeyWhenDefinedOnPrototype\", function () {\r\n        var prototype = {};\r\n        Reflect.defineMetadata(\"key2\", \"value\", prototype, \"name\");\r\n        var obj = Object.create(prototype);\r\n        Reflect.defineMetadata(\"key1\", \"value\", obj, \"name\");\r\n        Reflect.defineMetadata(\"key0\", \"value\", obj, \"name\");\r\n        var result = Reflect.getMetadataKeys(obj, \"name\");\r\n        chai_1.assert.deepEqual(result, [\"key1\", \"key0\", \"key2\"]);\r\n    });\r\n});\r\n//# sourceMappingURL=reflect-getmetadatakeys.js.map","sourceMap":{"version":3,"file":"reflect-getmetadatakeys.js","sourceRoot":"","sources":["node_modules/reflect-metadata/test/reflect-getmetadatakeys.ts"],"names":[],"mappings":"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","sourcesContent":["// 4.1.8 Reflect.getMetadataKeys ( target [, propertyKey] )\r\n// https://rbuckton.github.io/reflect-metadata/#reflect.getmetadatakeys\r\n\r\nimport \"../Reflect\";\r\nimport { assert } from \"chai\";\r\n\r\ndescribe(\"Reflect.getMetadataKeys\", () => {\r\n    it(\"KeysInvalidTarget\", () => {\r\n        // 1. If Type(target) is not Object, throw a TypeError exception.\r\n        assert.throws(() => Reflect.getMetadataKeys(undefined, undefined), TypeError);\r\n    });\r\n\r\n    it(\"KeysWithoutTargetKeyWhenNotDefined\", () => {\r\n        let obj = {};\r\n        let result = Reflect.getMetadataKeys(obj, undefined);\r\n        assert.deepEqual(result, []);\r\n    });\r\n\r\n    it(\"KeysWithoutTargetKeyWhenDefined\", () => {\r\n        let obj = {};\r\n        Reflect.defineMetadata(\"key\", \"value\", obj, undefined);\r\n        let result = Reflect.getMetadataKeys(obj, undefined);\r\n        assert.deepEqual(result, [\"key\"]);\r\n    });\r\n\r\n    it(\"KeysWithoutTargetKeyWhenDefinedOnPrototype\", () => {\r\n        let prototype = {};\r\n        let obj = Object.create(prototype);\r\n        Reflect.defineMetadata(\"key\", \"value\", prototype, undefined);\r\n        let result = Reflect.getMetadataKeys(obj, undefined);\r\n        assert.deepEqual(result, [\"key\"]);\r\n    });\r\n\r\n    it(\"KeysOrderWithoutTargetKey\", () => {\r\n        let obj = {};\r\n        Reflect.defineMetadata(\"key1\", \"value\", obj, undefined);\r\n        Reflect.defineMetadata(\"key0\", \"value\", obj, undefined);\r\n        let result = Reflect.getMetadataKeys(obj, undefined);\r\n        assert.deepEqual(result, [\"key1\", \"key0\"]);\r\n    });\r\n\r\n    it(\"KeysOrderAfterRedefineWithoutTargetKey\", () => {\r\n        let obj = {};\r\n        Reflect.defineMetadata(\"key1\", \"value\", obj, undefined);\r\n        Reflect.defineMetadata(\"key0\", \"value\", obj, undefined);\r\n        Reflect.defineMetadata(\"key1\", \"value\", obj, undefined);\r\n        let result = Reflect.getMetadataKeys(obj, undefined);\r\n        assert.deepEqual(result, [\"key1\", \"key0\"]);\r\n    });\r\n\r\n    it(\"KeysOrderWithoutTargetKeyWhenDefinedOnPrototype\", () => {\r\n        let prototype = {};\r\n        Reflect.defineMetadata(\"key2\", \"value\", prototype, undefined);\r\n        let obj = Object.create(prototype);\r\n        Reflect.defineMetadata(\"key1\", \"value\", obj, undefined);\r\n        Reflect.defineMetadata(\"key0\", \"value\", obj, undefined);\r\n        let result = Reflect.getMetadataKeys(obj, undefined);\r\n        assert.deepEqual(result, [\"key1\", \"key0\", \"key2\"]);\r\n    });\r\n\r\n    it(\"KeysWithTargetKeyWhenNotDefined\", () => {\r\n        let obj = {};\r\n        let result = Reflect.getMetadataKeys(obj, \"name\");\r\n        assert.deepEqual(result, []);\r\n    });\r\n\r\n    it(\"KeysWithTargetKeyWhenDefined\", () => {\r\n        let obj = {};\r\n        Reflect.defineMetadata(\"key\", \"value\", obj, \"name\");\r\n        let result = Reflect.getMetadataKeys(obj, \"name\");\r\n        assert.deepEqual(result, [\"key\"]);\r\n    });\r\n\r\n    it(\"KeysWithTargetKeyWhenDefinedOnPrototype\", () => {\r\n        let prototype = {};\r\n        let obj = Object.create(prototype);\r\n        Reflect.defineMetadata(\"key\", \"value\", prototype, \"name\");\r\n        let result = Reflect.getMetadataKeys(obj, \"name\");\r\n        assert.deepEqual(result, [\"key\"]);\r\n    });\r\n\r\n    it(\"KeysOrderAfterRedefineWithTargetKey\", () => {\r\n        let obj = {};\r\n        Reflect.defineMetadata(\"key1\", \"value\", obj, \"name\");\r\n        Reflect.defineMetadata(\"key0\", \"value\", obj, \"name\");\r\n        Reflect.defineMetadata(\"key1\", \"value\", obj, \"name\");\r\n        let result = Reflect.getMetadataKeys(obj, \"name\");\r\n        assert.deepEqual(result, [\"key1\", \"key0\"]);\r\n    });\r\n\r\n    it(\"KeysOrderWithTargetKeyWhenDefinedOnPrototype\", () => {\r\n        let prototype = {};\r\n        Reflect.defineMetadata(\"key2\", \"value\", prototype, \"name\");\r\n        let obj = Object.create(prototype);\r\n        Reflect.defineMetadata(\"key1\", \"value\", obj, \"name\");\r\n        Reflect.defineMetadata(\"key0\", \"value\", obj, \"name\");\r\n        let result = Reflect.getMetadataKeys(obj, \"name\");\r\n        assert.deepEqual(result, [\"key1\", \"key0\", \"key2\"]);\r\n    });\r\n});"]},"version":"1","isExternal":true,"dependencies":{"modules":[],"mappings":[{"modulePath":"tslib","resolvedPath":null,"external":false,"resolved":false},{"modulePath":"../Reflect","resolvedPath":"node_modules/reflect-metadata/Reflect","external":false,"resolved":true},{"modulePath":"chai","resolvedPath":null,"external":false,"resolved":false}],"refFiles":[],"refTypings":[]},"diagnostics":{"syntacticErrors":[],"semanticErrors":[{"code":2307,"fileName":"node_modules/reflect-metadata/test/reflect-getmetadatakeys.ts","message":"Cannot find module 'chai'.","line":5,"column":24},{"code":2304,"fileName":"node_modules/reflect-metadata/test/reflect-getmetadatakeys.ts","message":"Cannot find name 'describe'.","line":7,"column":1},{"code":2304,"fileName":"node_modules/reflect-metadata/test/reflect-getmetadatakeys.ts","message":"Cannot find name 'it'.","line":8,"column":5},{"code":2304,"fileName":"node_modules/reflect-metadata/test/reflect-getmetadatakeys.ts","message":"Cannot find name 'it'.","line":13,"column":5},{"code":2304,"fileName":"node_modules/reflect-metadata/test/reflect-getmetadatakeys.ts","message":"Cannot find name 'it'.","line":19,"column":5},{"code":2304,"fileName":"node_modules/reflect-metadata/test/reflect-getmetadatakeys.ts","message":"Cannot find name 'it'.","line":26,"column":5},{"code":2304,"fileName":"node_modules/reflect-metadata/test/reflect-getmetadatakeys.ts","message":"Cannot find name 'it'.","line":34,"column":5},{"code":2304,"fileName":"node_modules/reflect-metadata/test/reflect-getmetadatakeys.ts","message":"Cannot find name 'it'.","line":42,"column":5},{"code":2304,"fileName":"node_modules/reflect-metadata/test/reflect-getmetadatakeys.ts","message":"Cannot find name 'it'.","line":51,"column":5},{"code":2304,"fileName":"node_modules/reflect-metadata/test/reflect-getmetadatakeys.ts","message":"Cannot find name 'it'.","line":61,"column":5},{"code":2304,"fileName":"node_modules/reflect-metadata/test/reflect-getmetadatakeys.ts","message":"Cannot find name 'it'.","line":67,"column":5},{"code":2304,"fileName":"node_modules/reflect-metadata/test/reflect-getmetadatakeys.ts","message":"Cannot find name 'it'.","line":74,"column":5},{"code":2304,"fileName":"node_modules/reflect-metadata/test/reflect-getmetadatakeys.ts","message":"Cannot find name 'it'.","line":82,"column":5},{"code":2304,"fileName":"node_modules/reflect-metadata/test/reflect-getmetadatakeys.ts","message":"Cannot find name 'it'.","line":91,"column":5}]},"hash":"056b8a2987bcb996e6c98f5531434c778222d380"}