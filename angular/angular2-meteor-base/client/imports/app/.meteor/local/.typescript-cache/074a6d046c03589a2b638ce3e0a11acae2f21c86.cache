{"code":"// Reflect.decorate ( decorators, target [, propertyKey [, descriptor] ] )\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nrequire(\"../Reflect\");\r\nvar chai_1 = require(\"chai\");\r\ndescribe(\"Reflect.decorate\", function () {\r\n    it(\"ThrowsIfDecoratorsArgumentNotArrayForFunctionOverload\", function () {\r\n        var target = function () { };\r\n        chai_1.assert.throws(function () { return Reflect.decorate(undefined, target, undefined, undefined); }, TypeError);\r\n    });\r\n    it(\"ThrowsIfTargetArgumentNotFunctionForFunctionOverload\", function () {\r\n        var decorators = [];\r\n        var target = {};\r\n        chai_1.assert.throws(function () { return Reflect.decorate(decorators, target, undefined, undefined); }, TypeError);\r\n    });\r\n    it(\"ThrowsIfDecoratorsArgumentNotArrayForPropertyOverload\", function () {\r\n        var target = {};\r\n        var name = \"name\";\r\n        chai_1.assert.throws(function () { return Reflect.decorate(undefined, target, name, undefined); }, TypeError);\r\n    });\r\n    it(\"ThrowsIfTargetArgumentNotObjectForPropertyOverload\", function () {\r\n        var decorators = [];\r\n        var target = 1;\r\n        var name = \"name\";\r\n        chai_1.assert.throws(function () { return Reflect.decorate(decorators, target, name, undefined); }, TypeError);\r\n    });\r\n    it(\"ThrowsIfDecoratorsArgumentNotArrayForPropertyDescriptorOverload\", function () {\r\n        var target = {};\r\n        var name = \"name\";\r\n        var descriptor = {};\r\n        chai_1.assert.throws(function () { return Reflect.decorate(undefined, target, name, descriptor); }, TypeError);\r\n    });\r\n    it(\"ThrowsIfTargetArgumentNotObjectForPropertyDescriptorOverload\", function () {\r\n        var decorators = [];\r\n        var target = 1;\r\n        var name = \"name\";\r\n        var descriptor = {};\r\n        chai_1.assert.throws(function () { return Reflect.decorate(decorators, target, name, descriptor); }, TypeError);\r\n    });\r\n    it(\"ExecutesDecoratorsInReverseOrderForFunctionOverload\", function () {\r\n        var order = [];\r\n        var decorators = [\r\n            function (target) { order.push(0); },\r\n            function (target) { order.push(1); }\r\n        ];\r\n        var target = function () { };\r\n        Reflect.decorate(decorators, target);\r\n        chai_1.assert.deepEqual(order, [1, 0]);\r\n    });\r\n    it(\"ExecutesDecoratorsInReverseOrderForPropertyOverload\", function () {\r\n        var order = [];\r\n        var decorators = [\r\n            function (target, name) { order.push(0); },\r\n            function (target, name) { order.push(1); }\r\n        ];\r\n        var target = {};\r\n        var name = \"name\";\r\n        Reflect.decorate(decorators, target, name, undefined);\r\n        chai_1.assert.deepEqual(order, [1, 0]);\r\n    });\r\n    it(\"ExecutesDecoratorsInReverseOrderForPropertyDescriptorOverload\", function () {\r\n        var order = [];\r\n        var decorators = [\r\n            function (target, name) { order.push(0); },\r\n            function (target, name) { order.push(1); }\r\n        ];\r\n        var target = {};\r\n        var name = \"name\";\r\n        var descriptor = {};\r\n        Reflect.decorate(decorators, target, name, descriptor);\r\n        chai_1.assert.deepEqual(order, [1, 0]);\r\n    });\r\n    it(\"DecoratorPipelineForFunctionOverload\", function () {\r\n        var A = function A() { };\r\n        var B = function B() { };\r\n        var decorators = [\r\n            function (target) { return undefined; },\r\n            function (target) { return A; },\r\n            function (target) { return B; }\r\n        ];\r\n        var target = function () { };\r\n        var result = Reflect.decorate(decorators, target);\r\n        chai_1.assert.strictEqual(result, A);\r\n    });\r\n    it(\"DecoratorPipelineForPropertyOverload\", function () {\r\n        var A = {};\r\n        var B = {};\r\n        var decorators = [\r\n            function (target, name) { return undefined; },\r\n            function (target, name) { return A; },\r\n            function (target, name) { return B; }\r\n        ];\r\n        var target = {};\r\n        var result = Reflect.decorate(decorators, target, \"name\", undefined);\r\n        chai_1.assert.strictEqual(result, A);\r\n    });\r\n    it(\"DecoratorPipelineForPropertyDescriptorOverload\", function () {\r\n        var A = {};\r\n        var B = {};\r\n        var C = {};\r\n        var decorators = [\r\n            function (target, name) { return undefined; },\r\n            function (target, name) { return A; },\r\n            function (target, name) { return B; }\r\n        ];\r\n        var target = {};\r\n        var result = Reflect.decorate(decorators, target, \"name\", C);\r\n        chai_1.assert.strictEqual(result, A);\r\n    });\r\n    it(\"DecoratorCorrectTargetInPipelineForFunctionOverload\", function () {\r\n        var sent = [];\r\n        var A = function A() { };\r\n        var B = function B() { };\r\n        var decorators = [\r\n            function (target) { sent.push(target); return undefined; },\r\n            function (target) { sent.push(target); return undefined; },\r\n            function (target) { sent.push(target); return A; },\r\n            function (target) { sent.push(target); return B; }\r\n        ];\r\n        var target = function () { };\r\n        Reflect.decorate(decorators, target);\r\n        chai_1.assert.deepEqual(sent, [target, B, A, A]);\r\n    });\r\n    it(\"DecoratorCorrectTargetInPipelineForPropertyOverload\", function () {\r\n        var sent = [];\r\n        var decorators = [\r\n            function (target, name) { sent.push(target); },\r\n            function (target, name) { sent.push(target); },\r\n            function (target, name) { sent.push(target); },\r\n            function (target, name) { sent.push(target); }\r\n        ];\r\n        var target = {};\r\n        Reflect.decorate(decorators, target, \"name\");\r\n        chai_1.assert.deepEqual(sent, [target, target, target, target]);\r\n    });\r\n    it(\"DecoratorCorrectNameInPipelineForPropertyOverload\", function () {\r\n        var sent = [];\r\n        var decorators = [\r\n            function (target, name) { sent.push(name); },\r\n            function (target, name) { sent.push(name); },\r\n            function (target, name) { sent.push(name); },\r\n            function (target, name) { sent.push(name); }\r\n        ];\r\n        var target = {};\r\n        Reflect.decorate(decorators, target, \"name\");\r\n        chai_1.assert.deepEqual(sent, [\"name\", \"name\", \"name\", \"name\"]);\r\n    });\r\n    it(\"DecoratorCorrectTargetInPipelineForPropertyDescriptorOverload\", function () {\r\n        var sent = [];\r\n        var A = {};\r\n        var B = {};\r\n        var C = {};\r\n        var decorators = [\r\n            function (target, name) { sent.push(target); return undefined; },\r\n            function (target, name) { sent.push(target); return undefined; },\r\n            function (target, name) { sent.push(target); return A; },\r\n            function (target, name) { sent.push(target); return B; }\r\n        ];\r\n        var target = {};\r\n        Reflect.decorate(decorators, target, \"name\", C);\r\n        chai_1.assert.deepEqual(sent, [target, target, target, target]);\r\n    });\r\n    it(\"DecoratorCorrectNameInPipelineForPropertyDescriptorOverload\", function () {\r\n        var sent = [];\r\n        var A = {};\r\n        var B = {};\r\n        var C = {};\r\n        var decorators = [\r\n            function (target, name) { sent.push(name); return undefined; },\r\n            function (target, name) { sent.push(name); return undefined; },\r\n            function (target, name) { sent.push(name); return A; },\r\n            function (target, name) { sent.push(name); return B; }\r\n        ];\r\n        var target = {};\r\n        Reflect.decorate(decorators, target, \"name\", C);\r\n        chai_1.assert.deepEqual(sent, [\"name\", \"name\", \"name\", \"name\"]);\r\n    });\r\n    it(\"DecoratorCorrectDescriptorInPipelineForPropertyDescriptorOverload\", function () {\r\n        var sent = [];\r\n        var A = {};\r\n        var B = {};\r\n        var C = {};\r\n        var decorators = [\r\n            function (target, name, descriptor) { sent.push(descriptor); return undefined; },\r\n            function (target, name, descriptor) { sent.push(descriptor); return undefined; },\r\n            function (target, name, descriptor) { sent.push(descriptor); return A; },\r\n            function (target, name, descriptor) { sent.push(descriptor); return B; }\r\n        ];\r\n        var target = {};\r\n        Reflect.decorate(decorators, target, \"name\", C);\r\n        chai_1.assert.deepEqual(sent, [C, B, A, A]);\r\n    });\r\n});\r\n//# sourceMappingURL=reflect-decorate.js.map","sourceMap":{"version":3,"file":"reflect-decorate.js","sourceRoot":"","sources":["node_modules/reflect-metadata/test/reflect-decorate.ts"],"names":[],"mappings":"AAAA,0EAA0E;;AAE1E,sBAAoB;AACpB,6BAA8B;AAE9B,QAAQ,CAAC,kBAAkB,EAAE;IACzB,EAAE,CAAC,uDAAuD,EAAE;QACxD,IAAI,MAAM,GAAG,cAAa,CAAC,CAAC;QAC5B,aAAM,CAAC,MAAM,CAAC,cAAM,OAAA,OAAO,CAAC,QAAQ,CAAC,SAAS,EAAE,MAAM,EAAE,SAAS,EAAE,SAAS,CAAC,EAAzD,CAAyD,EAAE,SAAS,CAAC,CAAC;IAC9F,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,sDAAsD,EAAE;QACvD,IAAI,UAAU,GAA6D,EAAE,CAAC;QAC9E,IAAI,MAAM,GAAG,EAAE,CAAC;QAChB,aAAM,CAAC,MAAM,CAAC,cAAM,OAAA,OAAO,CAAC,QAAQ,CAAC,UAAU,EAAE,MAAM,EAAE,SAAS,EAAE,SAAS,CAAC,EAA1D,CAA0D,EAAE,SAAS,CAAC,CAAC;IAC/F,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,uDAAuD,EAAE;QACxD,IAAI,MAAM,GAAG,EAAE,CAAC;QAChB,IAAI,IAAI,GAAG,MAAM,CAAC;QAClB,aAAM,CAAC,MAAM,CAAC,cAAM,OAAA,OAAO,CAAC,QAAQ,CAAC,SAAS,EAAE,MAAM,EAAE,IAAI,EAAE,SAAS,CAAC,EAApD,CAAoD,EAAE,SAAS,CAAC,CAAC;IACzF,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,oDAAoD,EAAE;QACrD,IAAI,UAAU,GAA6D,EAAE,CAAC;QAC9E,IAAI,MAAM,GAAG,CAAC,CAAC;QACf,IAAI,IAAI,GAAG,MAAM,CAAC;QAClB,aAAM,CAAC,MAAM,CAAC,cAAM,OAAA,OAAO,CAAC,QAAQ,CAAC,UAAU,EAAE,MAAM,EAAE,IAAI,EAAE,SAAS,CAAC,EAArD,CAAqD,EAAE,SAAS,CAAC,CAAC;IAC1F,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,iEAAiE,EAAE;QAClE,IAAI,MAAM,GAAG,EAAE,CAAC;QAChB,IAAI,IAAI,GAAG,MAAM,CAAC;QAClB,IAAI,UAAU,GAAG,EAAE,CAAC;QACpB,aAAM,CAAC,MAAM,CAAC,cAAM,OAAA,OAAO,CAAC,QAAQ,CAAC,SAAS,EAAE,MAAM,EAAE,IAAI,EAAE,UAAU,CAAC,EAArD,CAAqD,EAAE,SAAS,CAAC,CAAC;IAC1F,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,8DAA8D,EAAE;QAC/D,IAAI,UAAU,GAA6D,EAAE,CAAC;QAC9E,IAAI,MAAM,GAAG,CAAC,CAAC;QACf,IAAI,IAAI,GAAG,MAAM,CAAC;QAClB,IAAI,UAAU,GAAG,EAAE,CAAC;QACpB,aAAM,CAAC,MAAM,CAAC,cAAM,OAAA,OAAO,CAAC,QAAQ,CAAC,UAAU,EAAE,MAAM,EAAE,IAAI,EAAE,UAAU,CAAC,EAAtD,CAAsD,EAAE,SAAS,CAAC,CAAC;IAC3F,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,qDAAqD,EAAE;QACtD,IAAI,KAAK,GAAa,EAAE,CAAC;QACzB,IAAI,UAAU,GAAG;YACb,UAAC,MAAgB,IAAa,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YAC9C,UAAC,MAAgB,IAAa,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;SACjD,CAAC;QACF,IAAI,MAAM,GAAG,cAAa,CAAC,CAAC;QAC5B,OAAO,CAAC,QAAQ,CAAC,UAAU,EAAE,MAAM,CAAC,CAAC;QACrC,aAAM,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;IACpC,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,qDAAqD,EAAE;QACtD,IAAI,KAAK,GAAa,EAAE,CAAC;QACzB,IAAI,UAAU,GAAG;YACb,UAAC,MAAc,EAAE,IAAqB,IAAa,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YACnE,UAAC,MAAc,EAAE,IAAqB,IAAa,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;SACtE,CAAC;QACF,IAAI,MAAM,GAAG,EAAE,CAAC;QAChB,IAAI,IAAI,GAAG,MAAM,CAAC;QAClB,OAAO,CAAC,QAAQ,CAAC,UAAU,EAAE,MAAM,EAAE,IAAI,EAAE,SAAS,CAAC,CAAC;QACtD,aAAM,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;IACpC,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,+DAA+D,EAAE;QAChE,IAAI,KAAK,GAAa,EAAE,CAAC;QACzB,IAAI,UAAU,GAAG;YACb,UAAC,MAAc,EAAE,IAAqB,IAAa,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YACnE,UAAC,MAAc,EAAE,IAAqB,IAAa,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;SACtE,CAAC;QACF,IAAI,MAAM,GAAG,EAAE,CAAC;QAChB,IAAI,IAAI,GAAG,MAAM,CAAC;QAClB,IAAI,UAAU,GAAG,EAAE,CAAC;QACpB,OAAO,CAAC,QAAQ,CAAC,UAAU,EAAE,MAAM,EAAE,IAAI,EAAE,UAAU,CAAC,CAAC;QACvD,aAAM,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;IACpC,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,sCAAsC,EAAE;QACvC,IAAI,CAAC,GAAG,eAAqB,CAAC,CAAC;QAC/B,IAAI,CAAC,GAAG,eAAqB,CAAC,CAAC;QAC/B,IAAI,UAAU,GAAG;YACb,UAAC,MAAgB,IAAY,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC;YAChD,UAAC,MAAgB,IAAY,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;YACxC,UAAC,MAAgB,IAAY,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;SAC3C,CAAC;QACF,IAAI,MAAM,GAAG,cAAoB,CAAC,CAAC;QACnC,IAAI,MAAM,GAAG,OAAO,CAAC,QAAQ,CAAC,UAAU,EAAE,MAAM,CAAC,CAAC;QAClD,aAAM,CAAC,WAAW,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;IAClC,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,sCAAsC,EAAE;QACvC,IAAI,CAAC,GAAG,EAAE,CAAC;QACX,IAAI,CAAC,GAAG,EAAE,CAAC;QACX,IAAI,UAAU,GAAG;YACb,UAAC,MAAc,EAAE,IAAqB,IAAY,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC;YACrE,UAAC,MAAc,EAAE,IAAqB,IAAY,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;YAC7D,UAAC,MAAc,EAAE,IAAqB,IAAY,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;SAChE,CAAC;QACF,IAAI,MAAM,GAAG,EAAE,CAAC;QAChB,IAAI,MAAM,GAAG,OAAO,CAAC,QAAQ,CAAC,UAAU,EAAE,MAAM,EAAE,MAAM,EAAE,SAAS,CAAC,CAAC;QACrE,aAAM,CAAC,WAAW,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;IAClC,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,gDAAgD,EAAE;QACjD,IAAI,CAAC,GAAG,EAAE,CAAC;QACX,IAAI,CAAC,GAAG,EAAE,CAAC;QACX,IAAI,CAAC,GAAG,EAAE,CAAC;QACX,IAAI,UAAU,GAAG;YACb,UAAC,MAAc,EAAE,IAAqB,IAAY,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC;YACrE,UAAC,MAAc,EAAE,IAAqB,IAAY,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;YAC7D,UAAC,MAAc,EAAE,IAAqB,IAAY,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;SAChE,CAAC;QACF,IAAI,MAAM,GAAG,EAAE,CAAC;QAChB,IAAI,MAAM,GAAG,OAAO,CAAC,QAAQ,CAAC,UAAU,EAAE,MAAM,EAAE,MAAM,EAAE,CAAC,CAAC,CAAC;QAC7D,aAAM,CAAC,WAAW,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;IAClC,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,qDAAqD,EAAE;QACtD,IAAI,IAAI,GAAe,EAAE,CAAC;QAC1B,IAAI,CAAC,GAAG,eAAqB,CAAC,CAAC;QAC/B,IAAI,CAAC,GAAG,eAAqB,CAAC,CAAC;QAC/B,IAAI,UAAU,GAAG;YACb,UAAC,MAAgB,IAAY,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC;YACnE,UAAC,MAAgB,IAAY,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC;YACnE,UAAC,MAAgB,IAAY,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;YAC3D,UAAC,MAAgB,IAAY,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;SAC9D,CAAC;QACF,IAAI,MAAM,GAAG,cAAoB,CAAC,CAAC;QACnC,OAAO,CAAC,QAAQ,CAAC,UAAU,EAAE,MAAM,CAAC,CAAC;QACrC,aAAM,CAAC,SAAS,CAAC,IAAI,EAAE,CAAC,MAAM,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;IAC9C,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,qDAAqD,EAAE;QACtD,IAAI,IAAI,GAAa,EAAE,CAAC;QACxB,IAAI,UAAU,GAAG;YACb,UAAC,MAAc,EAAE,IAAqB,IAAY,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;YACtE,UAAC,MAAc,EAAE,IAAqB,IAAY,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;YACtE,UAAC,MAAc,EAAE,IAAqB,IAAY,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;YACtE,UAAC,MAAc,EAAE,IAAqB,IAAY,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;SACzE,CAAC;QACF,IAAI,MAAM,GAAG,EAAG,CAAC;QACjB,OAAO,CAAC,QAAQ,CAAC,UAAU,EAAE,MAAM,EAAE,MAAM,CAAC,CAAC;QAC7C,aAAM,CAAC,SAAS,CAAC,IAAI,EAAE,CAAC,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,CAAC,CAAC,CAAC;IAC7D,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,mDAAmD,EAAE;QACpD,IAAI,IAAI,GAAwB,EAAE,CAAC;QACnC,IAAI,UAAU,GAAG;YACb,UAAC,MAAc,EAAE,IAAqB,IAAY,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;YACpE,UAAC,MAAc,EAAE,IAAqB,IAAY,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;YACpE,UAAC,MAAc,EAAE,IAAqB,IAAY,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;YACpE,UAAC,MAAc,EAAE,IAAqB,IAAY,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;SACvE,CAAC;QACF,IAAI,MAAM,GAAG,EAAG,CAAC;QACjB,OAAO,CAAC,QAAQ,CAAC,UAAU,EAAE,MAAM,EAAE,MAAM,CAAC,CAAC;QAC7C,aAAM,CAAC,SAAS,CAAC,IAAI,EAAE,CAAC,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,CAAC,CAAC,CAAC;IAC7D,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,+DAA+D,EAAE;QAChE,IAAI,IAAI,GAAa,EAAE,CAAC;QACxB,IAAI,CAAC,GAAG,EAAG,CAAC;QACZ,IAAI,CAAC,GAAG,EAAG,CAAC;QACZ,IAAI,CAAC,GAAG,EAAG,CAAC;QACZ,IAAI,UAAU,GAAG;YACb,UAAC,MAAc,EAAE,IAAqB,IAAY,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC;YACxF,UAAC,MAAc,EAAE,IAAqB,IAAY,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC;YACxF,UAAC,MAAc,EAAE,IAAqB,IAAY,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;YAChF,UAAC,MAAc,EAAE,IAAqB,IAAY,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;SACnF,CAAC;QACF,IAAI,MAAM,GAAG,EAAG,CAAC;QACjB,OAAO,CAAC,QAAQ,CAAC,UAAU,EAAE,MAAM,EAAE,MAAM,EAAE,CAAC,CAAC,CAAC;QAChD,aAAM,CAAC,SAAS,CAAC,IAAI,EAAE,CAAC,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,CAAC,CAAC,CAAC;IAC7D,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,6DAA6D,EAAE;QAC9D,IAAI,IAAI,GAAwB,EAAE,CAAC;QACnC,IAAI,CAAC,GAAG,EAAG,CAAC;QACZ,IAAI,CAAC,GAAG,EAAG,CAAC;QACZ,IAAI,CAAC,GAAG,EAAG,CAAC;QACZ,IAAI,UAAU,GAAG;YACb,UAAC,MAAc,EAAE,IAAqB,IAAY,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC;YACtF,UAAC,MAAc,EAAE,IAAqB,IAAY,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC;YACtF,UAAC,MAAc,EAAE,IAAqB,IAAY,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;YAC9E,UAAC,MAAc,EAAE,IAAqB,IAAY,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;SACjF,CAAC;QACF,IAAI,MAAM,GAAG,EAAG,CAAC;QACjB,OAAO,CAAC,QAAQ,CAAC,UAAU,EAAE,MAAM,EAAE,MAAM,EAAE,CAAC,CAAC,CAAC;QAChD,aAAM,CAAC,SAAS,CAAC,IAAI,EAAE,CAAC,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,CAAC,CAAC,CAAC;IAC7D,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,mEAAmE,EAAE;QACpE,IAAI,IAAI,GAAyB,EAAE,CAAC;QACpC,IAAI,CAAC,GAAG,EAAG,CAAC;QACZ,IAAI,CAAC,GAAG,EAAG,CAAC;QACZ,IAAI,CAAC,GAAG,EAAG,CAAC;QACZ,IAAI,UAAU,GAAG;YACb,UAAC,MAAc,EAAE,IAAqB,EAAE,UAA8B,IAAY,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC;YAC5H,UAAC,MAAc,EAAE,IAAqB,EAAE,UAA8B,IAAY,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC;YAC5H,UAAC,MAAc,EAAE,IAAqB,EAAE,UAA8B,IAAY,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;YACpH,UAAC,MAAc,EAAE,IAAqB,EAAE,UAA8B,IAAY,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;SACvH,CAAC;QACF,IAAI,MAAM,GAAG,EAAG,CAAC;QACjB,OAAO,CAAC,QAAQ,CAAC,UAAU,EAAE,MAAM,EAAE,MAAM,EAAE,CAAC,CAAC,CAAC;QAChD,aAAM,CAAC,SAAS,CAAC,IAAI,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;IACzC,CAAC,CAAC,CAAC;AACP,CAAC,CAAC,CAAC","sourcesContent":["// Reflect.decorate ( decorators, target [, propertyKey [, descriptor] ] )\r\n\r\nimport \"../Reflect\";\r\nimport { assert } from \"chai\";\r\n\r\ndescribe(\"Reflect.decorate\", () => {\r\n    it(\"ThrowsIfDecoratorsArgumentNotArrayForFunctionOverload\", () => {\r\n        let target = function() { };\r\n        assert.throws(() => Reflect.decorate(undefined, target, undefined, undefined), TypeError);\r\n    });\r\n\r\n    it(\"ThrowsIfTargetArgumentNotFunctionForFunctionOverload\", () => {\r\n        let decorators: (ClassDecorator | MethodDecorator | PropertyDecorator)[] = [];\r\n        let target = {};\r\n        assert.throws(() => Reflect.decorate(decorators, target, undefined, undefined), TypeError);\r\n    });\r\n\r\n    it(\"ThrowsIfDecoratorsArgumentNotArrayForPropertyOverload\", () => {\r\n        let target = {};\r\n        let name = \"name\";\r\n        assert.throws(() => Reflect.decorate(undefined, target, name, undefined), TypeError);\r\n    });\r\n\r\n    it(\"ThrowsIfTargetArgumentNotObjectForPropertyOverload\", () => {\r\n        let decorators: (ClassDecorator | MethodDecorator | PropertyDecorator)[] = [];\r\n        let target = 1;\r\n        let name = \"name\";\r\n        assert.throws(() => Reflect.decorate(decorators, target, name, undefined), TypeError);\r\n    });\r\n\r\n    it(\"ThrowsIfDecoratorsArgumentNotArrayForPropertyDescriptorOverload\", () => {\r\n        let target = {};\r\n        let name = \"name\";\r\n        let descriptor = {};\r\n        assert.throws(() => Reflect.decorate(undefined, target, name, descriptor), TypeError);\r\n    });\r\n\r\n    it(\"ThrowsIfTargetArgumentNotObjectForPropertyDescriptorOverload\", () => {\r\n        let decorators: (ClassDecorator | MethodDecorator | PropertyDecorator)[] = [];\r\n        let target = 1;\r\n        let name = \"name\";\r\n        let descriptor = {};\r\n        assert.throws(() => Reflect.decorate(decorators, target, name, descriptor), TypeError);\r\n    });\r\n\r\n    it(\"ExecutesDecoratorsInReverseOrderForFunctionOverload\", () => {\r\n        let order: number[] = [];\r\n        let decorators = [\r\n            (target: Function): void => { order.push(0); },\r\n            (target: Function): void => { order.push(1); }\r\n        ];\r\n        let target = function() { };\r\n        Reflect.decorate(decorators, target);\r\n        assert.deepEqual(order, [1, 0]);\r\n    });\r\n\r\n    it(\"ExecutesDecoratorsInReverseOrderForPropertyOverload\", () => {\r\n        let order: number[] = [];\r\n        let decorators = [\r\n            (target: Object, name: string | symbol): void => { order.push(0); },\r\n            (target: Object, name: string | symbol): void => { order.push(1); }\r\n        ];\r\n        let target = {};\r\n        let name = \"name\";\r\n        Reflect.decorate(decorators, target, name, undefined);\r\n        assert.deepEqual(order, [1, 0]);\r\n    });\r\n\r\n    it(\"ExecutesDecoratorsInReverseOrderForPropertyDescriptorOverload\", () => {\r\n        let order: number[] = [];\r\n        let decorators = [\r\n            (target: Object, name: string | symbol): void => { order.push(0); },\r\n            (target: Object, name: string | symbol): void => { order.push(1); }\r\n        ];\r\n        let target = {};\r\n        let name = \"name\";\r\n        let descriptor = {};\r\n        Reflect.decorate(decorators, target, name, descriptor);\r\n        assert.deepEqual(order, [1, 0]);\r\n    });\r\n\r\n    it(\"DecoratorPipelineForFunctionOverload\", () => {\r\n        let A = function A(): void { };\r\n        let B = function B(): void { };\r\n        let decorators = [\r\n            (target: Function): any => { return undefined; },\r\n            (target: Function): any => { return A; },\r\n            (target: Function): any => { return B; }\r\n        ];\r\n        let target = function (): void { };\r\n        let result = Reflect.decorate(decorators, target);\r\n        assert.strictEqual(result, A);\r\n    });\r\n\r\n    it(\"DecoratorPipelineForPropertyOverload\", () => {\r\n        let A = {};\r\n        let B = {};\r\n        let decorators = [\r\n            (target: Object, name: string | symbol): any => { return undefined; },\r\n            (target: Object, name: string | symbol): any => { return A; },\r\n            (target: Object, name: string | symbol): any => { return B; }\r\n        ];\r\n        let target = {};\r\n        let result = Reflect.decorate(decorators, target, \"name\", undefined);\r\n        assert.strictEqual(result, A);\r\n    });\r\n\r\n    it(\"DecoratorPipelineForPropertyDescriptorOverload\", () => {\r\n        let A = {};\r\n        let B = {};\r\n        let C = {};\r\n        let decorators = [\r\n            (target: Object, name: string | symbol): any => { return undefined; },\r\n            (target: Object, name: string | symbol): any => { return A; },\r\n            (target: Object, name: string | symbol): any => { return B; }\r\n        ];\r\n        let target = {};\r\n        let result = Reflect.decorate(decorators, target, \"name\", C);\r\n        assert.strictEqual(result, A);\r\n    });\r\n\r\n    it(\"DecoratorCorrectTargetInPipelineForFunctionOverload\", () => {\r\n        let sent: Function[] = [];\r\n        let A = function A(): void { };\r\n        let B = function B(): void { };\r\n        let decorators = [\r\n            (target: Function): any => { sent.push(target); return undefined; },\r\n            (target: Function): any => { sent.push(target); return undefined; },\r\n            (target: Function): any => { sent.push(target); return A; },\r\n            (target: Function): any => { sent.push(target); return B; }\r\n        ];\r\n        let target = function (): void { };\r\n        Reflect.decorate(decorators, target);\r\n        assert.deepEqual(sent, [target, B, A, A]);\r\n    });\r\n\r\n    it(\"DecoratorCorrectTargetInPipelineForPropertyOverload\", () => {\r\n        let sent: Object[] = [];\r\n        let decorators = [\r\n            (target: Object, name: string | symbol): any => { sent.push(target); },\r\n            (target: Object, name: string | symbol): any => { sent.push(target); },\r\n            (target: Object, name: string | symbol): any => { sent.push(target); },\r\n            (target: Object, name: string | symbol): any => { sent.push(target); }\r\n        ];\r\n        let target = { };\r\n        Reflect.decorate(decorators, target, \"name\");\r\n        assert.deepEqual(sent, [target, target, target, target]);\r\n    });\r\n\r\n    it(\"DecoratorCorrectNameInPipelineForPropertyOverload\", () => {\r\n        let sent: (symbol | string)[] = [];\r\n        let decorators = [\r\n            (target: Object, name: string | symbol): any => { sent.push(name); },\r\n            (target: Object, name: string | symbol): any => { sent.push(name); },\r\n            (target: Object, name: string | symbol): any => { sent.push(name); },\r\n            (target: Object, name: string | symbol): any => { sent.push(name); }\r\n        ];\r\n        let target = { };\r\n        Reflect.decorate(decorators, target, \"name\");\r\n        assert.deepEqual(sent, [\"name\", \"name\", \"name\", \"name\"]);\r\n    });\r\n\r\n    it(\"DecoratorCorrectTargetInPipelineForPropertyDescriptorOverload\", () => {\r\n        let sent: Object[] = [];\r\n        let A = { };\r\n        let B = { };\r\n        let C = { };\r\n        let decorators = [\r\n            (target: Object, name: string | symbol): any => { sent.push(target); return undefined; },\r\n            (target: Object, name: string | symbol): any => { sent.push(target); return undefined; },\r\n            (target: Object, name: string | symbol): any => { sent.push(target); return A; },\r\n            (target: Object, name: string | symbol): any => { sent.push(target); return B; }\r\n        ];\r\n        let target = { };\r\n        Reflect.decorate(decorators, target, \"name\", C);\r\n        assert.deepEqual(sent, [target, target, target, target]);\r\n    });\r\n\r\n    it(\"DecoratorCorrectNameInPipelineForPropertyDescriptorOverload\", () => {\r\n        let sent: (symbol | string)[] = [];\r\n        let A = { };\r\n        let B = { };\r\n        let C = { };\r\n        let decorators = [\r\n            (target: Object, name: string | symbol): any => { sent.push(name); return undefined; },\r\n            (target: Object, name: string | symbol): any => { sent.push(name); return undefined; },\r\n            (target: Object, name: string | symbol): any => { sent.push(name); return A; },\r\n            (target: Object, name: string | symbol): any => { sent.push(name); return B; }\r\n        ];\r\n        let target = { };\r\n        Reflect.decorate(decorators, target, \"name\", C);\r\n        assert.deepEqual(sent, [\"name\", \"name\", \"name\", \"name\"]);\r\n    });\r\n\r\n    it(\"DecoratorCorrectDescriptorInPipelineForPropertyDescriptorOverload\", () => {\r\n        let sent: PropertyDescriptor[] = [];\r\n        let A = { };\r\n        let B = { };\r\n        let C = { };\r\n        let decorators = [\r\n            (target: Object, name: string | symbol, descriptor: PropertyDescriptor): any => { sent.push(descriptor); return undefined; },\r\n            (target: Object, name: string | symbol, descriptor: PropertyDescriptor): any => { sent.push(descriptor); return undefined; },\r\n            (target: Object, name: string | symbol, descriptor: PropertyDescriptor): any => { sent.push(descriptor); return A; },\r\n            (target: Object, name: string | symbol, descriptor: PropertyDescriptor): any => { sent.push(descriptor); return B; }\r\n        ];\r\n        let target = { };\r\n        Reflect.decorate(decorators, target, \"name\", C);\r\n        assert.deepEqual(sent, [C, B, A, A]);\r\n    });\r\n});\r\n"]},"version":"1","isExternal":true,"dependencies":{"modules":[],"mappings":[{"modulePath":"tslib","resolvedPath":null,"external":false,"resolved":false},{"modulePath":"../Reflect","resolvedPath":"node_modules/reflect-metadata/Reflect","external":false,"resolved":true},{"modulePath":"chai","resolvedPath":null,"external":false,"resolved":false}],"refFiles":[],"refTypings":[]},"diagnostics":{"syntacticErrors":[],"semanticErrors":[{"code":2307,"fileName":"node_modules/reflect-metadata/test/reflect-decorate.ts","message":"Cannot find module 'chai'.","line":4,"column":24},{"code":2304,"fileName":"node_modules/reflect-metadata/test/reflect-decorate.ts","message":"Cannot find name 'describe'.","line":6,"column":1},{"code":2304,"fileName":"node_modules/reflect-metadata/test/reflect-decorate.ts","message":"Cannot find name 'it'.","line":7,"column":5},{"code":2304,"fileName":"node_modules/reflect-metadata/test/reflect-decorate.ts","message":"Cannot find name 'it'.","line":12,"column":5},{"code":2304,"fileName":"node_modules/reflect-metadata/test/reflect-decorate.ts","message":"Cannot find name 'it'.","line":18,"column":5},{"code":2304,"fileName":"node_modules/reflect-metadata/test/reflect-decorate.ts","message":"Cannot find name 'it'.","line":24,"column":5},{"code":2304,"fileName":"node_modules/reflect-metadata/test/reflect-decorate.ts","message":"Cannot find name 'it'.","line":31,"column":5},{"code":2304,"fileName":"node_modules/reflect-metadata/test/reflect-decorate.ts","message":"Cannot find name 'it'.","line":38,"column":5},{"code":2304,"fileName":"node_modules/reflect-metadata/test/reflect-decorate.ts","message":"Cannot find name 'it'.","line":46,"column":5},{"code":2304,"fileName":"node_modules/reflect-metadata/test/reflect-decorate.ts","message":"Cannot find name 'it'.","line":57,"column":5},{"code":2304,"fileName":"node_modules/reflect-metadata/test/reflect-decorate.ts","message":"Cannot find name 'it'.","line":69,"column":5},{"code":2304,"fileName":"node_modules/reflect-metadata/test/reflect-decorate.ts","message":"Cannot find name 'it'.","line":82,"column":5},{"code":2304,"fileName":"node_modules/reflect-metadata/test/reflect-decorate.ts","message":"Cannot find name 'it'.","line":95,"column":5},{"code":2304,"fileName":"node_modules/reflect-metadata/test/reflect-decorate.ts","message":"Cannot find name 'it'.","line":108,"column":5},{"code":2304,"fileName":"node_modules/reflect-metadata/test/reflect-decorate.ts","message":"Cannot find name 'it'.","line":122,"column":5},{"code":2304,"fileName":"node_modules/reflect-metadata/test/reflect-decorate.ts","message":"Cannot find name 'it'.","line":137,"column":5},{"code":2304,"fileName":"node_modules/reflect-metadata/test/reflect-decorate.ts","message":"Cannot find name 'it'.","line":150,"column":5},{"code":2304,"fileName":"node_modules/reflect-metadata/test/reflect-decorate.ts","message":"Cannot find name 'it'.","line":163,"column":5},{"code":2304,"fileName":"node_modules/reflect-metadata/test/reflect-decorate.ts","message":"Cannot find name 'it'.","line":179,"column":5},{"code":2304,"fileName":"node_modules/reflect-metadata/test/reflect-decorate.ts","message":"Cannot find name 'it'.","line":195,"column":5}]},"hash":"074a6d046c03589a2b638ce3e0a11acae2f21c86"}