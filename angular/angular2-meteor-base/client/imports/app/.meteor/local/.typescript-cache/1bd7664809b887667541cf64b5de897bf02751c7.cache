{"code":"// 4.1.7 Reflect.getOwnMetadata ( metadataKey, target [, propertyKey] )\r\n// https://rbuckton.github.io/reflect-metadata/#reflect.getownmetadata\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nrequire(\"../Reflect\");\r\nvar chai_1 = require(\"chai\");\r\ndescribe(\"Reflect.getOwnMetadata\", function () {\r\n    it(\"InvalidTarget\", function () {\r\n        chai_1.assert.throws(function () { return Reflect.getOwnMetadata(\"key\", undefined, undefined); }, TypeError);\r\n    });\r\n    it(\"WithoutTargetKeyWhenNotDefined\", function () {\r\n        var obj = {};\r\n        var result = Reflect.getOwnMetadata(\"key\", obj, undefined);\r\n        chai_1.assert.equal(result, undefined);\r\n    });\r\n    it(\"WithoutTargetKeyWhenDefined\", function () {\r\n        var obj = {};\r\n        Reflect.defineMetadata(\"key\", \"value\", obj, undefined);\r\n        var result = Reflect.getOwnMetadata(\"key\", obj, undefined);\r\n        chai_1.assert.equal(result, \"value\");\r\n    });\r\n    it(\"WithoutTargetKeyWhenDefinedOnPrototype\", function () {\r\n        var prototype = {};\r\n        var obj = Object.create(prototype);\r\n        Reflect.defineMetadata(\"key\", \"value\", prototype, undefined);\r\n        var result = Reflect.getOwnMetadata(\"key\", obj, undefined);\r\n        chai_1.assert.equal(result, undefined);\r\n    });\r\n    it(\"WithTargetKeyWhenNotDefined\", function () {\r\n        var obj = {};\r\n        var result = Reflect.getOwnMetadata(\"key\", obj, \"name\");\r\n        chai_1.assert.equal(result, undefined);\r\n    });\r\n    it(\"WithTargetKeyWhenDefined\", function () {\r\n        var obj = {};\r\n        Reflect.defineMetadata(\"key\", \"value\", obj, \"name\");\r\n        var result = Reflect.getOwnMetadata(\"key\", obj, \"name\");\r\n        chai_1.assert.equal(result, \"value\");\r\n    });\r\n    it(\"WithTargetKeyWhenDefinedOnPrototype\", function () {\r\n        var prototype = {};\r\n        var obj = Object.create(prototype);\r\n        Reflect.defineMetadata(\"key\", \"value\", prototype, \"name\");\r\n        var result = Reflect.getOwnMetadata(\"key\", obj, \"name\");\r\n        chai_1.assert.equal(result, undefined);\r\n    });\r\n});\r\n//# sourceMappingURL=reflect-getownmetadata.js.map","sourceMap":{"version":3,"file":"reflect-getownmetadata.js","sourceRoot":"","sources":["node_modules/reflect-metadata/test/reflect-getownmetadata.ts"],"names":[],"mappings":"AAAA,uEAAuE;AACvE,sEAAsE;;AAEtE,sBAAoB;AACpB,6BAA8B;AAE9B,QAAQ,CAAC,wBAAwB,EAAE;IAC/B,EAAE,CAAC,eAAe,EAAE;QAChB,aAAM,CAAC,MAAM,CAAC,cAAM,OAAA,OAAO,CAAC,cAAc,CAAC,KAAK,EAAE,SAAS,EAAE,SAAS,CAAC,EAAnD,CAAmD,EAAE,SAAS,CAAC,CAAC;IACxF,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,gCAAgC,EAAE;QACjC,IAAI,GAAG,GAAG,EAAE,CAAC;QACb,IAAI,MAAM,GAAG,OAAO,CAAC,cAAc,CAAC,KAAK,EAAE,GAAG,EAAE,SAAS,CAAC,CAAC;QAC3D,aAAM,CAAC,KAAK,CAAC,MAAM,EAAE,SAAS,CAAC,CAAC;IACpC,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,6BAA6B,EAAE;QAC9B,IAAI,GAAG,GAAG,EAAE,CAAC;QACb,OAAO,CAAC,cAAc,CAAC,KAAK,EAAE,OAAO,EAAE,GAAG,EAAE,SAAS,CAAC,CAAC;QACvD,IAAI,MAAM,GAAG,OAAO,CAAC,cAAc,CAAC,KAAK,EAAE,GAAG,EAAE,SAAS,CAAC,CAAC;QAC3D,aAAM,CAAC,KAAK,CAAC,MAAM,EAAE,OAAO,CAAC,CAAC;IAClC,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,wCAAwC,EAAE;QACzC,IAAI,SAAS,GAAG,EAAE,CAAC;QACnB,IAAI,GAAG,GAAG,MAAM,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;QACnC,OAAO,CAAC,cAAc,CAAC,KAAK,EAAE,OAAO,EAAE,SAAS,EAAE,SAAS,CAAC,CAAC;QAC7D,IAAI,MAAM,GAAG,OAAO,CAAC,cAAc,CAAC,KAAK,EAAE,GAAG,EAAE,SAAS,CAAC,CAAC;QAC3D,aAAM,CAAC,KAAK,CAAC,MAAM,EAAE,SAAS,CAAC,CAAC;IACpC,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,6BAA6B,EAAE;QAC9B,IAAI,GAAG,GAAG,EAAE,CAAC;QACb,IAAI,MAAM,GAAG,OAAO,CAAC,cAAc,CAAC,KAAK,EAAE,GAAG,EAAE,MAAM,CAAC,CAAC;QACxD,aAAM,CAAC,KAAK,CAAC,MAAM,EAAE,SAAS,CAAC,CAAC;IACpC,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,0BAA0B,EAAE;QAC3B,IAAI,GAAG,GAAG,EAAE,CAAC;QACb,OAAO,CAAC,cAAc,CAAC,KAAK,EAAE,OAAO,EAAE,GAAG,EAAE,MAAM,CAAC,CAAC;QACpD,IAAI,MAAM,GAAG,OAAO,CAAC,cAAc,CAAC,KAAK,EAAE,GAAG,EAAE,MAAM,CAAC,CAAC;QACxD,aAAM,CAAC,KAAK,CAAC,MAAM,EAAE,OAAO,CAAC,CAAC;IAClC,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,qCAAqC,EAAE;QACtC,IAAI,SAAS,GAAG,EAAE,CAAC;QACnB,IAAI,GAAG,GAAG,MAAM,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;QACnC,OAAO,CAAC,cAAc,CAAC,KAAK,EAAE,OAAO,EAAE,SAAS,EAAE,MAAM,CAAC,CAAC;QAC1D,IAAI,MAAM,GAAG,OAAO,CAAC,cAAc,CAAC,KAAK,EAAE,GAAG,EAAE,MAAM,CAAC,CAAC;QACxD,aAAM,CAAC,KAAK,CAAC,MAAM,EAAE,SAAS,CAAC,CAAC;IACpC,CAAC,CAAC,CAAC;AACP,CAAC,CAAC,CAAC","sourcesContent":["// 4.1.7 Reflect.getOwnMetadata ( metadataKey, target [, propertyKey] )\r\n// https://rbuckton.github.io/reflect-metadata/#reflect.getownmetadata\r\n\r\nimport \"../Reflect\";\r\nimport { assert } from \"chai\";\r\n\r\ndescribe(\"Reflect.getOwnMetadata\", () => {\r\n    it(\"InvalidTarget\", () => {\r\n        assert.throws(() => Reflect.getOwnMetadata(\"key\", undefined, undefined), TypeError);\r\n    });\r\n\r\n    it(\"WithoutTargetKeyWhenNotDefined\", () => {\r\n        let obj = {};\r\n        let result = Reflect.getOwnMetadata(\"key\", obj, undefined);\r\n        assert.equal(result, undefined);\r\n    });\r\n\r\n    it(\"WithoutTargetKeyWhenDefined\", () => {\r\n        let obj = {};\r\n        Reflect.defineMetadata(\"key\", \"value\", obj, undefined);\r\n        let result = Reflect.getOwnMetadata(\"key\", obj, undefined);\r\n        assert.equal(result, \"value\");\r\n    });\r\n\r\n    it(\"WithoutTargetKeyWhenDefinedOnPrototype\", () => {\r\n        let prototype = {};\r\n        let obj = Object.create(prototype);\r\n        Reflect.defineMetadata(\"key\", \"value\", prototype, undefined);\r\n        let result = Reflect.getOwnMetadata(\"key\", obj, undefined);\r\n        assert.equal(result, undefined);\r\n    });\r\n\r\n    it(\"WithTargetKeyWhenNotDefined\", () => {\r\n        let obj = {};\r\n        let result = Reflect.getOwnMetadata(\"key\", obj, \"name\");\r\n        assert.equal(result, undefined);\r\n    });\r\n\r\n    it(\"WithTargetKeyWhenDefined\", () => {\r\n        let obj = {};\r\n        Reflect.defineMetadata(\"key\", \"value\", obj, \"name\");\r\n        let result = Reflect.getOwnMetadata(\"key\", obj, \"name\");\r\n        assert.equal(result, \"value\");\r\n    });\r\n\r\n    it(\"WithTargetKeyWhenDefinedOnPrototype\", () => {\r\n        let prototype = {};\r\n        let obj = Object.create(prototype);\r\n        Reflect.defineMetadata(\"key\", \"value\", prototype, \"name\");\r\n        let result = Reflect.getOwnMetadata(\"key\", obj, \"name\");\r\n        assert.equal(result, undefined);\r\n    });\r\n});"]},"version":"1","isExternal":true,"dependencies":{"modules":[],"mappings":[{"modulePath":"tslib","resolvedPath":null,"external":false,"resolved":false},{"modulePath":"../Reflect","resolvedPath":"node_modules/reflect-metadata/Reflect","external":false,"resolved":true},{"modulePath":"chai","resolvedPath":null,"external":false,"resolved":false}],"refFiles":[],"refTypings":[]},"diagnostics":{"syntacticErrors":[],"semanticErrors":[{"code":2307,"fileName":"node_modules/reflect-metadata/test/reflect-getownmetadata.ts","message":"Cannot find module 'chai'.","line":5,"column":24},{"code":2304,"fileName":"node_modules/reflect-metadata/test/reflect-getownmetadata.ts","message":"Cannot find name 'describe'.","line":7,"column":1},{"code":2304,"fileName":"node_modules/reflect-metadata/test/reflect-getownmetadata.ts","message":"Cannot find name 'it'.","line":8,"column":5},{"code":2304,"fileName":"node_modules/reflect-metadata/test/reflect-getownmetadata.ts","message":"Cannot find name 'it'.","line":12,"column":5},{"code":2304,"fileName":"node_modules/reflect-metadata/test/reflect-getownmetadata.ts","message":"Cannot find name 'it'.","line":18,"column":5},{"code":2304,"fileName":"node_modules/reflect-metadata/test/reflect-getownmetadata.ts","message":"Cannot find name 'it'.","line":25,"column":5},{"code":2304,"fileName":"node_modules/reflect-metadata/test/reflect-getownmetadata.ts","message":"Cannot find name 'it'.","line":33,"column":5},{"code":2304,"fileName":"node_modules/reflect-metadata/test/reflect-getownmetadata.ts","message":"Cannot find name 'it'.","line":39,"column":5},{"code":2304,"fileName":"node_modules/reflect-metadata/test/reflect-getownmetadata.ts","message":"Cannot find name 'it'.","line":46,"column":5}]},"hash":"1bd7664809b887667541cf64b5de897bf02751c7"}