{"code":"// 4.1.2 Reflect.metadata ( metadataKey, metadataValue )\r\n// https://rbuckton.github.io/reflect-metadata/#reflect.metadata\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nrequire(\"../Reflect\");\r\nvar chai_1 = require(\"chai\");\r\ndescribe(\"Reflect.metadata\", function () {\r\n    it(\"ReturnsDecoratorFunction\", function () {\r\n        var result = Reflect.metadata(\"key\", \"value\");\r\n        chai_1.assert.equal(typeof result, \"function\");\r\n    });\r\n    it(\"DecoratorThrowsWithInvalidTargetWithTargetKey\", function () {\r\n        var decorator = Reflect.metadata(\"key\", \"value\");\r\n        chai_1.assert.throws(function () { return decorator(undefined, \"name\"); }, TypeError);\r\n    });\r\n    it(\"DecoratorThrowsWithInvalidTargetKey\", function () {\r\n        var decorator = Reflect.metadata(\"key\", \"value\");\r\n        chai_1.assert.throws(function () { return decorator({}, {}); }, TypeError);\r\n    });\r\n    it(\"OnTargetWithoutTargetKey\", function () {\r\n        var decorator = Reflect.metadata(\"key\", \"value\");\r\n        var target = function () { };\r\n        decorator(target);\r\n        var result = Reflect.hasOwnMetadata(\"key\", target, undefined);\r\n        chai_1.assert.equal(result, true);\r\n    });\r\n    it(\"OnTargetWithTargetKey\", function () {\r\n        var decorator = Reflect.metadata(\"key\", \"value\");\r\n        var target = {};\r\n        decorator(target, \"name\");\r\n        var result = Reflect.hasOwnMetadata(\"key\", target, \"name\");\r\n        chai_1.assert.equal(result, true);\r\n    });\r\n});\r\n//# sourceMappingURL=reflect-metadata.js.map","sourceMap":{"version":3,"file":"reflect-metadata.js","sourceRoot":"","sources":["node_modules/reflect-metadata/test/reflect-metadata.ts"],"names":[],"mappings":"AAAA,wDAAwD;AACxD,gEAAgE;;AAEhE,sBAAoB;AACpB,6BAA8B;AAE9B,QAAQ,CAAC,kBAAkB,EAAE;IACzB,EAAE,CAAC,0BAA0B,EAAE;QAC3B,IAAI,MAAM,GAAG,OAAO,CAAC,QAAQ,CAAC,KAAK,EAAE,OAAO,CAAC,CAAC;QAC9C,aAAM,CAAC,KAAK,CAAC,OAAO,MAAM,EAAE,UAAU,CAAC,CAAC;IAC5C,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,+CAA+C,EAAE;QAChD,IAAI,SAAS,GAAG,OAAO,CAAC,QAAQ,CAAC,KAAK,EAAE,OAAO,CAAC,CAAC;QACjD,aAAM,CAAC,MAAM,CAAC,cAAM,OAAA,SAAS,CAAC,SAAS,EAAE,MAAM,CAAC,EAA5B,CAA4B,EAAE,SAAS,CAAC,CAAC;IACjE,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,qCAAqC,EAAE;QACtC,IAAI,SAAS,GAAG,OAAO,CAAC,QAAQ,CAAC,KAAK,EAAE,OAAO,CAAC,CAAC;QACjD,aAAM,CAAC,MAAM,CAAC,cAAM,OAAA,SAAS,CAAC,EAAE,EAAO,EAAE,CAAC,EAAtB,CAAsB,EAAE,SAAS,CAAC,CAAC;IAC3D,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,0BAA0B,EAAE;QAC3B,IAAI,SAAS,GAAG,OAAO,CAAC,QAAQ,CAAC,KAAK,EAAE,OAAO,CAAC,CAAC;QACjD,IAAI,MAAM,GAAG,cAAa,CAAC,CAAA;QAC3B,SAAS,CAAC,MAAM,CAAC,CAAC;QAElB,IAAI,MAAM,GAAG,OAAO,CAAC,cAAc,CAAC,KAAK,EAAE,MAAM,EAAE,SAAS,CAAC,CAAC;QAC9D,aAAM,CAAC,KAAK,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;IAC/B,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,uBAAuB,EAAE;QACxB,IAAI,SAAS,GAAG,OAAO,CAAC,QAAQ,CAAC,KAAK,EAAE,OAAO,CAAC,CAAC;QACjD,IAAI,MAAM,GAAG,EAAE,CAAA;QACf,SAAS,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC;QAE1B,IAAI,MAAM,GAAG,OAAO,CAAC,cAAc,CAAC,KAAK,EAAE,MAAM,EAAE,MAAM,CAAC,CAAC;QAC3D,aAAM,CAAC,KAAK,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;IAC/B,CAAC,CAAC,CAAC;AACP,CAAC,CAAC,CAAC","sourcesContent":["// 4.1.2 Reflect.metadata ( metadataKey, metadataValue )\r\n// https://rbuckton.github.io/reflect-metadata/#reflect.metadata\r\n\r\nimport \"../Reflect\";\r\nimport { assert } from \"chai\";\r\n\r\ndescribe(\"Reflect.metadata\", () => {\r\n    it(\"ReturnsDecoratorFunction\", () => {\r\n        let result = Reflect.metadata(\"key\", \"value\");\r\n        assert.equal(typeof result, \"function\");\r\n    });\r\n\r\n    it(\"DecoratorThrowsWithInvalidTargetWithTargetKey\", () => {\r\n        let decorator = Reflect.metadata(\"key\", \"value\");\r\n        assert.throws(() => decorator(undefined, \"name\"), TypeError);\r\n    });\r\n\r\n    it(\"DecoratorThrowsWithInvalidTargetKey\", () => {\r\n        let decorator = Reflect.metadata(\"key\", \"value\");\r\n        assert.throws(() => decorator({}, <any>{}), TypeError);\r\n    });\r\n\r\n    it(\"OnTargetWithoutTargetKey\", () => {\r\n        let decorator = Reflect.metadata(\"key\", \"value\");\r\n        let target = function () {}\r\n        decorator(target);\r\n\r\n        let result = Reflect.hasOwnMetadata(\"key\", target, undefined);\r\n        assert.equal(result, true);\r\n    });\r\n\r\n    it(\"OnTargetWithTargetKey\", () => {\r\n        let decorator = Reflect.metadata(\"key\", \"value\");\r\n        let target = {}\r\n        decorator(target, \"name\");\r\n\r\n        let result = Reflect.hasOwnMetadata(\"key\", target, \"name\");\r\n        assert.equal(result, true);\r\n    });\r\n});"]},"version":"1","isExternal":true,"dependencies":{"modules":[],"mappings":[{"modulePath":"tslib","resolvedPath":null,"external":false,"resolved":false},{"modulePath":"../Reflect","resolvedPath":"node_modules/reflect-metadata/Reflect","external":false,"resolved":true},{"modulePath":"chai","resolvedPath":null,"external":false,"resolved":false}],"refFiles":[],"refTypings":[]},"diagnostics":{"syntacticErrors":[],"semanticErrors":[{"code":2307,"fileName":"node_modules/reflect-metadata/test/reflect-metadata.ts","message":"Cannot find module 'chai'.","line":5,"column":24},{"code":2304,"fileName":"node_modules/reflect-metadata/test/reflect-metadata.ts","message":"Cannot find name 'describe'.","line":7,"column":1},{"code":2304,"fileName":"node_modules/reflect-metadata/test/reflect-metadata.ts","message":"Cannot find name 'it'.","line":8,"column":5},{"code":2304,"fileName":"node_modules/reflect-metadata/test/reflect-metadata.ts","message":"Cannot find name 'it'.","line":13,"column":5},{"code":2304,"fileName":"node_modules/reflect-metadata/test/reflect-metadata.ts","message":"Cannot find name 'it'.","line":18,"column":5},{"code":2304,"fileName":"node_modules/reflect-metadata/test/reflect-metadata.ts","message":"Cannot find name 'it'.","line":23,"column":5},{"code":2304,"fileName":"node_modules/reflect-metadata/test/reflect-metadata.ts","message":"Cannot find name 'it'.","line":32,"column":5}]},"hash":"8a56f86ffeaffabbcddb5cca0fd8185c5e5920c2"}